// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  fullName  String
  avatarUrl String?
  skills    Skill[]
  preferences CareerPreference?
  education Education[]
  experience Experience[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Skill {
  id        Int      @id @default(autoincrement())
  name      String
  level     Int?
  category  String
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([userId, name])
}

model CareerPreference {
  id              String   @id @default(uuid())
  industry        String
  preferredSalary Int
  workType        String
  location        String
  userId          String   @unique
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Education {
  id            String   @id @default(uuid())
  degree        String
  fieldOfStudy  String
  institution   String
  graduationYear Int
  userId        String
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Experience {
  id          String   @id @default(uuid())
  title       String
  company     String
  startDate   DateTime
  endDate     DateTime?
  description String?
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


